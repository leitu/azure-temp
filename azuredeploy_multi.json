{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "vnetNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "This defines single vm below vnet"
      }
    },
    "subnetNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "This defines single vm beloning subnet"
      }
    },
    "vmNamePrefix": {
      "type": "string",
      "metadata": {
        "description": "This defines single vm name "
      }
    },
    "numberOfInstances": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 2,
      "maxValue": 5,
      "metadata": {
        "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
      }
    },
    "sasToken": {
      "type": "securestring"
    }
  },
  "variables": {
    "storageAccountName": "[uniqueString(resourceGroup().id)]",
    "vnetName": "[parameters('vnetNamePrefix')]",
    "subnetName": "[parameters('subnetNamePrefix')]",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks/',variables('vnetName')),'/subnets/',variables('subnetName'))]",
    "vmName": "[parameters('vmNamePrefix')]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "adminUsername": "[parameters('adminUsername')]",
    "vmStorageAccountContainerName": "vhds",
    "machineSettings": {
      "vmSize": "Standard_D1_v2"
    },
     "osSettings": {
      "imageReference": {
        "publisher": "Openlogic",
        "offer": "Centos",
        "sku": "7.2",
        "version": "latest"
        }
      },
    "blobUrl": "https://alexstoragetest.blob.core.windows.net/alex-test/"
  },
  "resources": [
     {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-05-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "apiVersion": "2016-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[parameters('numberOfInstances')]"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('machineSettings').vmSize]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmName'),copyindex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": "[variables('osSettings').imageReference]",
          "osDisk": {
            "name": "osdisk",
            "vhd": {
             "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-05-01').primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('vmName'),copyIndex(),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex()))]"
            }
          ]
        }
      }
    }
  ],
  "outputs": {
    
  }
}
